{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
Linear Probing\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Hash Tables -  Linear Probing
\f1\b0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic mw1920_external-content.duckduckgo.com.png \width13360 \height7340 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 \

\f0\b\fs36 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sa298\partightenfactor0
\cf0 Overview\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Linear Probing can be applied to hash tables, it looks for the next empty location in an array by looking into the next cell until it finds an empty spot. Each time the linear probing is incremented by 1 it does it by a linear fashion. Each probe after that looks for the next value. \
There are three basic operations linked with linear probing which are as follows:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Search\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Insert\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Delete\
\pard\pardeftab720\sa298\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf0 Analysis\
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 Time Space Complexity:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 	\'95 
\f0\b\fs28 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\fs36 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 [S] Strengths:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Fixes any collisions that might happen with a simple hash table implementation\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [W] Weakness:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Load factor needs to be adjusted\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [O] Opportunities\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [T] Threats:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Code Implementation
\fs24 \
\pard\pardeftab720\partightenfactor0

\f3\b0 \cf0 public class SimpleHashtable \{\
    private StoredEmployee[] hashtable;\
\
\
    public SimpleHashtable()\{hashtable = new StoredEmployee[10];\}\
\
\
    public void put(String key, Employee employee)\{\
        int hashedKey = hashKey(key);\
        if(occupied(hashedKey))\{\
            int stopIndex = hashedKey;\
            if(hashedKey == hashtable.length-1)\{\
                hashedKey =0;\
            \}\
            else\{\
                hashedKey++;\
            \}\
\
\
            while(occupied(hashedKey) && hashedKey != stopIndex)\{\
                hashedKey = (hashedKey + 1) % hashtable.length;\
            \}\
        \}\
\
\
        if(occupied(hashedKey))\{\
            System.out.println("Sorry, there is already an employee at position" + hashedKey);\
        \}\
        else\{\
            hashtable[hashedKey] = new StoredEmployee(key,employee);\
        \}\
    \}\
\
\
    public Employee get(String key)\{\
        int hashedKey = findKey(key);\
        if(hashedKey == -1)\{\
            return null;\
        \}\
        return  hashtable[hashedKey].employee;\
    \}\
\
\
    public Employee remove(String key)\{\
        int hashedKey = findKey(key);if(hashedKey == -1)\{\
            return null;\
        \}\
\
\
\
\
        Employee employee = hashtable[hashedKey].employee;\
        hashtable[hashedKey] = null;\
        return employee;\
    \}\
\
\
    private int hashKey(String key) \{\
        return key.length() % hashtable.length;\
    \}\
\
\
    private int findKey(String key)\{\
        int hashedKey = hashKey(key);\
        if(hashtable[hashedKey] != null && hashtable[hashedKey].key.equals(key))\{\
            return hashedKey;\
        \}\
\
\
        int stopIndex = hashedKey;\
        if(hashedKey == hashtable.length-1)\{\
            hashedKey = 0;\
        \}\
        else\{\
            hashedKey++;\
        \}\
\
\
        while(hashedKey != stopIndex &&\
                hashtable[hashedKey] != null &&\
                !hashtable[hashedKey].key.equals(key))\{\
            hashedKey = (hashedKey + 1) % hashtable.length;\
        \}\
\
\
        if(hashtable[hashedKey] != null &&\
                hashtable[hashedKey].key.equals(key))\{\
            return hashedKey;\
        \}\
        else\{\
            return -1;\
        \}\
    \}\
\
\
\
\
\
\
    private boolean occupied(int index)\{\
        return hashtable[index] != null;\
    \}\
\
\
    public void printHashtable() \{\
        for (int i = 0; i < hashtable.length; i++) \{\
            if (hashtable[i] == null) \{\
                System.out.println("empty");\
            \}\
            else \{\
                System.out.println("Position " + i + ": " +hashtable[i].employee);\
            \}\
 \
\
\
}