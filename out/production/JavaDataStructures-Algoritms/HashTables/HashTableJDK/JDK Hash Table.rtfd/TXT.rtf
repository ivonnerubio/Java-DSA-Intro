{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
\f3\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww14320\viewh18460\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
JDK Hash Tables\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Hash Tables - JDK Implementation
\f1\b0\fs24 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic mw1920_external-content.duckduckgo.com.png \width19220 \height10640 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Overview\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf0 \outl0\strokewidth0 \strokec2 The JDK uses the hash-map class. It permits null values and null keys. The load factor can be applied or the default can be used which is .75. The implementation is not synchronized. If the same key is used to put a value, it will replace the previous value. The method .putIfAbsent will put a value in the hash map if its an empty spot.\outl0\strokewidth0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf0 Analysis\
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 Time Space Complexity:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 	\'95 
\f0\b\fs28 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\fs36 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 [S] Strengths:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can set the load factor\outl0\strokewidth0 \
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [W] Weakness:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implementation not synchronized, if you want to use it with multiple threats you have to wrap it.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The same key cannot be used to retrieve two values\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \outl0\strokewidth0 \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [O] Opportunities\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 [T] Threats:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Code Implementation\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs26 \cf0 \outl0\strokewidth0 \strokec2 package HashTables.HashTableJDK;\
\
\
import java.util.HashMap;\
import java.util.Iterator;\
import java.util.Map;\
\
\
public class Main \{\
\
\
    public static void main(String[] args) \{\
        Employee janeJones = new Employee("Jane", "Jones", 123);\
        Employee johnDoe = new Employee("John", "Doe", 4567);\
        Employee marySmith = new Employee("Mary", "Smith", 22);\
        Employee mikeWilson = new Employee("Mike", "Wilson", 3245);\
\
\
        Map<String, Employee> hashMap = new HashMap<String, Employee>();\
        hashMap.put("Jones", janeJones);\
        hashMap.put("Doe", johnDoe);\
        hashMap.put("Smith", marySmith);\
        //Employee employee = hashMap.put("Doe", mikeWilson);\
        Employee employee = hashMap.putIfAbsent("Doe", mikeWilson);\
        System.out.println(employee);\
\
\
        System.out.println(hashMap.getOrDefault("someone", mikeWilson));\
\
\
        System.out.println(hashMap.remove("Jones"));\
\
\
//        System.out.println(hashMap.containsKey("Doe"));\
//        System.out.println(hashMap.containsValue(janeJones));\
\
\
//        Iterator<Employee> iterator = hashMap.values().iterator();\
//        while (iterator.hasNext()) \{\
//            System.out.println(iterator.next());\
//        \}\
\
\
        hashMap.forEach((k, v) -> System.out.println("Key = " + k + ", Employee = " + v));\
\pard\pardeftab720\partightenfactor0

\fs24 \cf0 \outl0\strokewidth0 \
}